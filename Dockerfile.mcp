# Use official Deno image with Debian base for better canvas support
FROM denoland/deno:2.3.6

# Set image metadata
LABEL name="gpt-vis-mcp"
LABEL version="${TAG:-latest}"
LABEL maintainer="gpt-vis-mcp-team"
LABEL description="GPT-Vis MCP Server - MCP Mode"

# Build argument for tag
ARG TAG=latest

# Install system dependencies for canvas and Node.js
RUN apt-get update && apt-get install -y \
    build-essential \
    libcairo2-dev \
    libpango1.0-dev \
    libjpeg-dev \
    libgif-dev \
    librsvg2-dev \
    pkg-config \
    python3 \
    python3-pip \
    curl \
    unzip \
    locales \
    fonts-noto-cjk \
    fonts-wqy-zenhei \
    fonts-wqy-microhei \
    fonts-liberation \
    fontconfig \
    && rm -rf /var/lib/apt/lists/*

# Configure locales for Chinese support
RUN echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && \
    echo "zh_CN.UTF-8 UTF-8" >> /etc/locale.gen && \
    locale-gen && \
    fc-cache -fv

# Install Node.js (latest LTS) and node-gyp - required for canvas
RUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - \
    && apt-get install -y nodejs

# Install uv and mcp-proxy (needed for SSE mode)
RUN curl -LsSf https://astral.sh/uv/install.sh | sh && \
    /root/.local/bin/uv tool install mcp-proxy 

# Set working directory
WORKDIR /app

# Copy dependency files first to leverage Docker caching
COPY deno.json deno.lock* ./

# Set environment variables
ENV RENDERED_IMAGE_PATH=/tmp/gpt-vis-charts \
    DENO_DIR=/deno-dir \
    DENO_INSTALL_ROOT=/deno-dir/install-root \
    LANG=zh_CN.UTF-8 \
    LANGUAGE=zh_CN:zh \
    LC_ALL=zh_CN.UTF-8 \
    PATH="/root/.local/bin:$PATH" 

# Create necessary directories
RUN mkdir -p $DENO_DIR $RENDERED_IMAGE_PATH

# Copy source code
COPY . .

# Install and cache dependencies
RUN deno task compile && \
    deno cache server.ts

# Labels for image identification
LABEL org.opencontainers.image.source="https://github.com/yaonyan/gpt-vis-mcp"
LABEL org.opencontainers.image.title="gpt-vis-mcp"
LABEL org.opencontainers.image.description="GPT-Vis MCP Server"

# Set the entrypoint to use the simple server with transport flag
# Transport modes: stdio (default), sse
# Usage examples:
#   stdio mode: docker run image
#   sse mode:   docker run image --transport sse --port 3000 --host 0.0.0.0
ENTRYPOINT ["deno", "run", "--cached-only", "--allow-all", "server.ts"]
CMD ["--transport", "stdio"]
